[{"C:\\Users\\TMC\\Projects\\todo-list\\src\\index.js":"1","C:\\Users\\TMC\\Projects\\todo-list\\src\\App.js":"2","C:\\Users\\TMC\\Projects\\todo-list\\src\\components\\TabBar.js":"3","C:\\Users\\TMC\\Projects\\todo-list\\src\\components\\TaskList.js":"4","C:\\Users\\TMC\\Projects\\todo-list\\src\\components\\AddTask.js":"5","C:\\Users\\TMC\\Projects\\todo-list\\src\\reducers\\index.js":"6","C:\\Users\\TMC\\Projects\\todo-list\\src\\reducers\\todoReducer.js":"7","C:\\Users\\TMC\\Projects\\todo-list\\src\\reducers\\userInput.js":"8","C:\\Users\\TMC\\Projects\\todo-list\\src\\actions\\inputUser.js":"9","C:\\Users\\TMC\\Projects\\todo-list\\src\\actions\\addTodo.js":"10","C:\\Users\\TMC\\Projects\\todo-list\\src\\components\\ListItems.js":"11","C:\\Users\\TMC\\Projects\\todo-list\\src\\actions\\deleteTodo.js":"12","C:\\Users\\TMC\\Projects\\todo-list\\src\\actions\\completeToDo.js":"13","C:\\Users\\TMC\\Projects\\todo-list\\src\\actions\\redoTodo.js":"14","C:\\Users\\TMC\\Projects\\todo-list\\src\\actions\\updateTodo.js":"15","C:\\Users\\TMC\\Projects\\todo-list\\src\\components\\DeleteTasksButton.js":"16","C:\\Users\\TMC\\Projects\\todo-list\\src\\actions\\deleteAllTodo.js":"17","C:\\Users\\TMC\\Projects\\todo-list\\src\\components\\CustomControlsExample.js":"18","C:\\Users\\TMC\\Projects\\todo-list\\src\\components\\Selector.js":"19","C:\\Users\\TMC\\Projects\\todo-list\\src\\actions\\updateUrgency.js":"20","C:\\Users\\TMC\\Projects\\todo-list\\src\\chakraTheme.js":"21","C:\\Users\\TMC\\Projects\\todo-list\\src\\actions\\updateTab.js":"22","C:\\Users\\TMC\\Projects\\todo-list\\src\\reducers\\currentTabReducer.js":"23","C:\\Users\\TMC\\Projects\\todo-list\\src\\localStorage.js":"24"},{"size":733,"mtime":1610789040911,"results":"25","hashOfConfig":"26"},{"size":682,"mtime":1610787410406,"results":"27","hashOfConfig":"26"},{"size":5588,"mtime":1610953640825,"results":"28","hashOfConfig":"26"},{"size":1353,"mtime":1610838674668,"results":"29","hashOfConfig":"26"},{"size":2766,"mtime":1610842339635,"results":"30","hashOfConfig":"26"},{"size":336,"mtime":1610783538173,"results":"31","hashOfConfig":"26"},{"size":2024,"mtime":1610794523544,"results":"32","hashOfConfig":"26"},{"size":222,"mtime":1610787738412,"results":"33","hashOfConfig":"26"},{"size":117,"mtime":1610269711767,"results":"34","hashOfConfig":"26"},{"size":111,"mtime":1610347878758,"results":"35","hashOfConfig":"26"},{"size":4603,"mtime":1610839313380,"results":"36","hashOfConfig":"26"},{"size":114,"mtime":1610352708611,"results":"37","hashOfConfig":"26"},{"size":120,"mtime":1610357480439,"results":"38","hashOfConfig":"26"},{"size":108,"mtime":1610435294665,"results":"39","hashOfConfig":"26"},{"size":132,"mtime":1610523859187,"results":"40","hashOfConfig":"26"},{"size":2425,"mtime":1610794428997,"results":"41","hashOfConfig":"26"},{"size":104,"mtime":1610612255895,"results":"42","hashOfConfig":"26"},{"size":2188,"mtime":1610953771648,"results":"43","hashOfConfig":"26"},{"size":1893,"mtime":1610839077541,"results":"44","hashOfConfig":"26"},{"size":191,"mtime":1610703999678,"results":"45","hashOfConfig":"26"},{"size":340,"mtime":1610785669627,"results":"46","hashOfConfig":"26"},{"size":117,"mtime":1610790106143,"results":"47","hashOfConfig":"26"},{"size":205,"mtime":1610791696264,"results":"48","hashOfConfig":"26"},{"size":370,"mtime":1610789187050,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"2p17k2",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"C:\\Users\\TMC\\Projects\\todo-list\\src\\index.js",[],["103","104"],"C:\\Users\\TMC\\Projects\\todo-list\\src\\App.js",[],"C:\\Users\\TMC\\Projects\\todo-list\\src\\components\\TabBar.js",["105"],"C:\\Users\\TMC\\Projects\\todo-list\\src\\components\\TaskList.js",["106","107","108","109","110","111","112"],"import React from 'react';\r\nimport {\r\n    List,\r\n    ListIcon,\r\n    Fade,\r\n    ScaleFade,\r\n    Slide,\r\n    SlideFade,\r\n} from '@chakra-ui/react';\r\nimport { CheckCircleIcon, CheckIcon } from '@chakra-ui/icons';\r\nimport ListItems from './ListItems';\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\n\r\nconst TaskList = ({ status }) => {\r\n\r\n    \r\n    //! grab tasks from state\r\n    const tasks = useSelector((state) => {\r\n        return state.tasks;\r\n    });\r\n\r\n    //!filter tasks into three categories - all, complete, and active\r\n    const filterTaskList = (tasks) => {\r\n        if (status === 'all') return tasks;\r\n        if (status === 'active') {\r\n            return tasks.filter((task) => task.status === 'active');\r\n        }\r\n        if (status === 'complete') {\r\n            return tasks.filter((task) => task.status === 'complete');\r\n        }\r\n    };\r\n    const filteredTaskList = filterTaskList(tasks);\r\n\r\n    //!render each task into a list\r\n    const renderedTaskList = filteredTaskList.map((ele) => {\r\n        return (\r\n            <ListItems\r\n                task={ele.task}\r\n                id={ele.id}\r\n                status={ele.status}\r\n                key={ele.id}\r\n                urgency={ele.urgency}\r\n            />\r\n        );\r\n    });\r\n\r\n    return <List spacing={3}>{renderedTaskList}</List>;\r\n};\r\n\r\nexport default TaskList;\r\n","C:\\Users\\TMC\\Projects\\todo-list\\src\\components\\AddTask.js",["113"],"import React, { useRef, useEffect } from 'react';\r\nimport {\r\n    Flex,\r\n    Spacer,\r\n    Button,\r\n    Input,\r\n    FormControl,\r\n    useToast,\r\n} from '@chakra-ui/react';\r\n\r\n//! actions\r\nimport inputUser from '../actions/inputUser';\r\nimport addTodo from '../actions/addTodo';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nconst AddTask = () => {\r\n    //! init useDispatch hook\r\n    const dispatch = useDispatch();\r\n\r\n    //! Grab from state\r\n    const taskInput = useSelector((state) => {\r\n        return state.input;\r\n    });\r\n\r\n    const tasks = useSelector((state) => {\r\n        return state;\r\n    });\r\n\r\n    //!focus on the input by using useRef and after it's render, use useEffect to focus it!\r\n    const reference = useRef(null);\r\n    useEffect(() => {\r\n        reference.current.focus();\r\n    });\r\n\r\n    //!event handlers\r\n    const onChangeAddTaskHandler = (e) => {\r\n        dispatch(inputUser(e.target.value));\r\n    };\r\n\r\n    const onClickAddTaskHandler = () => {\r\n        dispatch(addTodo(taskInput));\r\n        dispatch(inputUser(''));\r\n    };\r\n\r\n    const toast = useToast();\r\n\r\n    //! if task input is false, disable add button\r\n    //!clear input when user presses the add button by updating piece of state to \" \"\r\n\r\n    return (\r\n        <FormControl id=\"task\" my={5}>\r\n            <form\r\n                onSubmit={(ev) => {\r\n                    ev.preventDefault();\r\n                    onClickAddTaskHandler();\r\n                }}\r\n            >\r\n                <Flex>\r\n                    <Input\r\n                        onChange={onChangeAddTaskHandler}\r\n                        placeholder=\"Enter a task\"\r\n                        mr=\"25px\"\r\n                        value={taskInput}\r\n                        type=\"text\"\r\n                        ref={reference}\r\n                    />\r\n                    <Spacer />\r\n                    <Button\r\n                        colorScheme=\"blue\"\r\n                        variant=\"outline\"\r\n                        px=\"50px\"\r\n                        textAlign=\"center\"\r\n                        isDisabled={!taskInput}\r\n                        onClick={() => {\r\n                            onClickAddTaskHandler();\r\n                            toast({\r\n                                title: 'Task Added.',\r\n                                description: `You've added a new task!`,\r\n                                status: 'success',\r\n                                duration: 2000,\r\n                                isClosable: true,\r\n                            });\r\n                        }}\r\n                    >\r\n                        Add\r\n                    </Button>\r\n                </Flex>\r\n            </form>\r\n        </FormControl>\r\n    );\r\n};\r\n\r\nexport default AddTask;\r\n","C:\\Users\\TMC\\Projects\\todo-list\\src\\reducers\\index.js",[],"C:\\Users\\TMC\\Projects\\todo-list\\src\\reducers\\todoReducer.js",[],"C:\\Users\\TMC\\Projects\\todo-list\\src\\reducers\\userInput.js",[],"C:\\Users\\TMC\\Projects\\todo-list\\src\\actions\\inputUser.js",[],"C:\\Users\\TMC\\Projects\\todo-list\\src\\actions\\addTodo.js",[],"C:\\Users\\TMC\\Projects\\todo-list\\src\\components\\ListItems.js",["114","115","116","117"],"import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n//!components\r\nimport CustomControlsExample from './CustomControlsExample';\r\nimport Selector from './Selector';\r\n//!actions\r\nimport deleteTodo from '../actions/deleteTodo';\r\nimport completeTodo from '../actions/completeToDo';\r\nimport redoTodo from '../actions/redoTodo';\r\nimport updateTodo from '../actions/updateTodo';\r\n//!\r\nimport { TiTickOutline } from 'react-icons/ti';\r\nimport { VscChromeClose } from 'react-icons/vsc';\r\nimport { IoReturnDownBack } from 'react-icons/io5';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport {\r\n    ListItem,\r\n    Flex,\r\n    Spacer,\r\n    IconButton,\r\n    useToast,\r\n    Box,\r\n} from '@chakra-ui/react';\r\n\r\nconst ListItems = ({ task, id, status, urgency }) => {\r\n    // //! determine styling\r\n\r\n    const urgencyStyling = (currentList) => {\r\n        switch (urgency) {\r\n            case 'Non-urgent':\r\n                return 'nonUrgent';\r\n            case 'Moderately Urgent':\r\n                return 'moderatelyUrgent';\r\n            case 'Urgent':\r\n                return 'Urgent';\r\n        }\r\n    };\r\n\r\n    //! init dispatch\r\n    const dispatch = useDispatch();\r\n\r\n    //! init toast function\r\n    const toast = useToast();\r\n\r\n    //!event handlers\r\n    const onClickDeleteTask = () => {\r\n        dispatch(deleteTodo(id));\r\n    };\r\n\r\n    const onClickCompleteTask = () => {\r\n        dispatch(completeTodo(id));\r\n    };\r\n\r\n    const onClickRedoTask = () => {\r\n        dispatch(redoTodo(id));\r\n    };\r\n\r\n    const onChangeUpdateTask = (e) => {\r\n        dispatch(updateTodo(e.target.value, id));\r\n    };\r\n\r\n    //! init create chakra and framer motion component\r\n\r\n    // //! on initial render, fade in\r\n    // useEffect(() => {\r\n    //     console.log('inital render');\r\n    // });\r\n\r\n    return (\r\n        <AnimatePresence>\r\n            <motion.div\r\n                exit={{ opacity: 0 }}\r\n                transition={{ duration: 0.5 }}\r\n                key={id}\r\n            >\r\n                <Box\r\n                    _hover={{\r\n                        fontWeight: 'semibold',\r\n                        backgroundColor: '#f1f0f0',\r\n                        borderRadius: '5px',\r\n                    }}\r\n                >\r\n                    <ListItem textStyle={urgencyStyling()}>\r\n                        <Flex alignItems=\"center\">\r\n                            {status === 'complete' ? (\r\n                                <IconButton\r\n                                    aria-label=\"Complete Task\"\r\n                                    icon={<IoReturnDownBack color=\"orange\" />}\r\n                                    onClick={onClickRedoTask}\r\n                                    fontSize=\"30px\"\r\n                                    variant=\"outline\"\r\n                                    color=\"yellow\"\r\n                                />\r\n                            ) : (\r\n                                <IconButton\r\n                                    aria-label=\"Complete task\"\r\n                                    icon={<TiTickOutline color=\"green\" />}\r\n                                    onClick={onClickCompleteTask}\r\n                                    fontSize=\"30px\"\r\n                                    variant=\"outline\"\r\n                                />\r\n                            )}\r\n\r\n                            <CustomControlsExample task={task} id={id} />\r\n                            <Selector id={id} urgency={urgency} />\r\n                            <Spacer />\r\n                            <IconButton\r\n                                icon={<VscChromeClose color=\"red\" />}\r\n                                colorScheme=\"blue\"\r\n                                variant=\"outline\"\r\n                                onClick={() => {\r\n                                    onClickDeleteTask();\r\n                                    toast({\r\n                                        title: 'Task Deleted.',\r\n                                        description: `You've deleted a task!`,\r\n                                        status: 'error',\r\n                                        duration: 2000,\r\n                                        isClosable: true,\r\n                                    });\r\n                                }}\r\n                            >\r\n                                Delete\r\n                            </IconButton>\r\n                        </Flex>\r\n                    </ListItem>\r\n                </Box>\r\n            </motion.div>\r\n        </AnimatePresence>\r\n    );\r\n};\r\n\r\nexport default ListItems;\r\n","C:\\Users\\TMC\\Projects\\todo-list\\src\\actions\\deleteTodo.js",[],"C:\\Users\\TMC\\Projects\\todo-list\\src\\actions\\completeToDo.js",[],"C:\\Users\\TMC\\Projects\\todo-list\\src\\actions\\redoTodo.js",[],"C:\\Users\\TMC\\Projects\\todo-list\\src\\actions\\updateTodo.js",[],"C:\\Users\\TMC\\Projects\\todo-list\\src\\components\\DeleteTasksButton.js",[],"C:\\Users\\TMC\\Projects\\todo-list\\src\\actions\\deleteAllTodo.js",[],"C:\\Users\\TMC\\Projects\\todo-list\\src\\components\\CustomControlsExample.js",[],"C:\\Users\\TMC\\Projects\\todo-list\\src\\components\\Selector.js",["118"],"import React from 'react';\r\nimport updateUrgency from '../actions/updateUrgency';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Select } from '@chakra-ui/react';\r\n\r\nconst Selector = ({ id, urgency }) => {\r\n    //! init dispatch\r\n    const dispatch = useDispatch();\r\n\r\n    //!event handler\r\n    const urgencyChange = (urgency) => {\r\n        console.log(urgency, id);\r\n        dispatch(updateUrgency(id, urgency));\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Select\r\n                display={[\r\n                    'none', // 0-30em\r\n                    'none', // 30em-48em\r\n                    'block', // 48em-62em\r\n                    'block', // 62em+\r\n                ]}\r\n                placeholder=\"Select urgency\"\r\n                w=\"35%\"\r\n                mr={4}\r\n                value={urgency}\r\n                onChange={(e) => {\r\n                    urgencyChange(e.target.value);\r\n                }}\r\n            >\r\n                <option value=\"Non-urgent\">Non-urgent</option>\r\n                <option value=\"Moderately Urgent\">Moderately Urgent</option>\r\n                <option value=\"Urgent\">Urgent</option>\r\n            </Select>\r\n\r\n            <Select\r\n                display={[\r\n                    'block', // 0-30em\r\n                    'block', // 30em-48em\r\n                    'none', // 48em-62em\r\n                    'none', // 62em+\r\n                ]}\r\n                placeholder=\"\"\r\n                w=\"35%\"\r\n                mr={4}\r\n                value={urgency}\r\n                onChange={(e) => {\r\n                    urgencyChange(e.target.value);\r\n                }}\r\n            >\r\n                <option value=\"Non-urgent\">!</option>\r\n                <option value=\"Moderately Urgent\">!!</option>\r\n                <option value=\"Urgent\">!!!</option>\r\n            </Select>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Selector;\r\n","C:\\Users\\TMC\\Projects\\todo-list\\src\\actions\\updateUrgency.js",[],"C:\\Users\\TMC\\Projects\\todo-list\\src\\chakraTheme.js",[],"C:\\Users\\TMC\\Projects\\todo-list\\src\\actions\\updateTab.js",[],"C:\\Users\\TMC\\Projects\\todo-list\\src\\reducers\\currentTabReducer.js",[],"C:\\Users\\TMC\\Projects\\todo-list\\src\\localStorage.js",[],{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":78,"column":8,"nodeType":"125","endLine":78,"endColumn":19,"suggestions":"126"},{"ruleId":"127","severity":1,"message":"128","line":4,"column":5,"nodeType":"129","messageId":"130","endLine":4,"endColumn":13},{"ruleId":"127","severity":1,"message":"131","line":5,"column":5,"nodeType":"129","messageId":"130","endLine":5,"endColumn":9},{"ruleId":"127","severity":1,"message":"132","line":6,"column":5,"nodeType":"129","messageId":"130","endLine":6,"endColumn":14},{"ruleId":"127","severity":1,"message":"133","line":7,"column":5,"nodeType":"129","messageId":"130","endLine":7,"endColumn":10},{"ruleId":"127","severity":1,"message":"134","line":8,"column":5,"nodeType":"129","messageId":"130","endLine":8,"endColumn":14},{"ruleId":"127","severity":1,"message":"135","line":10,"column":10,"nodeType":"129","messageId":"130","endLine":10,"endColumn":25},{"ruleId":"127","severity":1,"message":"136","line":10,"column":27,"nodeType":"129","messageId":"130","endLine":10,"endColumn":36},{"ruleId":"127","severity":1,"message":"137","line":26,"column":11,"nodeType":"129","messageId":"130","endLine":26,"endColumn":16},{"ruleId":"127","severity":1,"message":"138","line":1,"column":17,"nodeType":"129","messageId":"130","endLine":1,"endColumn":26},{"ruleId":"127","severity":1,"message":"139","line":2,"column":10,"nodeType":"129","messageId":"130","endLine":2,"endColumn":21},{"ruleId":"140","severity":1,"message":"141","line":29,"column":9,"nodeType":"142","messageId":"143","endLine":36,"endColumn":10},{"ruleId":"127","severity":1,"message":"144","line":58,"column":11,"nodeType":"129","messageId":"130","endLine":58,"endColumn":29},{"ruleId":"127","severity":1,"message":"139","line":3,"column":10,"nodeType":"129","messageId":"130","endLine":3,"endColumn":21},"no-native-reassign",["145"],"no-negated-in-lhs",["146"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["147"],"no-unused-vars","'ListIcon' is defined but never used.","Identifier","unusedVar","'Fade' is defined but never used.","'ScaleFade' is defined but never used.","'Slide' is defined but never used.","'SlideFade' is defined but never used.","'CheckCircleIcon' is defined but never used.","'CheckIcon' is defined but never used.","'tasks' is assigned a value but never used.","'useEffect' is defined but never used.","'useSelector' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'onChangeUpdateTask' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"148","fix":"149"},"Update the dependencies array to be: [activeTab, history]",{"range":"150","text":"151"},[2156,2167],"[activeTab, history]"]